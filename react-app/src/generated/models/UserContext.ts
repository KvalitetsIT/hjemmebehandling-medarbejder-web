/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserContext
 */
export interface UserContext {
    /**
     * 
     * @type {string}
     * @memberof UserContext
     */
    orgId?: string;
    /**
     * 
     * @type {string}
     * @memberof UserContext
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserContext
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserContext
     */
    fullName?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserContext
     */
    autorisationsids?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof UserContext
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof UserContext
     */
    email?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserContext
     */
    entitlements?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof UserContext
     */
    orgName?: string;
}

/**
 * Check if a given object implements the UserContext interface.
 */
export function instanceOfUserContext(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserContextFromJSON(json: any): UserContext {
    return UserContextFromJSONTyped(json, false);
}

export function UserContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserContext {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'orgId': !exists(json, 'orgId') ? undefined : json['orgId'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'fullName': !exists(json, 'fullName') ? undefined : json['fullName'],
        'autorisationsids': !exists(json, 'autorisationsids') ? undefined : json['autorisationsids'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'entitlements': !exists(json, 'entitlements') ? undefined : json['entitlements'],
        'orgName': !exists(json, 'orgName') ? undefined : json['orgName'],
    };
}

export function UserContextToJSON(value?: UserContext | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'orgId': value.orgId,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'fullName': value.fullName,
        'autorisationsids': value.autorisationsids,
        'userId': value.userId,
        'email': value.email,
        'entitlements': value.entitlements,
        'orgName': value.orgName,
    };
}

