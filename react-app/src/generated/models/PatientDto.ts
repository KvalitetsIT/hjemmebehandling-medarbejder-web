/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ContactDetailsDto,
    ContactDetailsDtoFromJSON,
    ContactDetailsDtoFromJSONTyped,
    ContactDetailsDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface PatientDto
 */
export interface PatientDto {
    /**
     * 
     * @type {string}
     * @memberof PatientDto
     */
    givenName?: string;
    /**
     * 
     * @type {string}
     * @memberof PatientDto
     */
    familyName?: string;
    /**
     * 
     * @type {string}
     * @memberof PatientDto
     */
    cpr?: string;
    /**
     * 
     * @type {string}
     * @memberof PatientDto
     */
    customUserName?: string;
    /**
     * 
     * @type {ContactDetailsDto}
     * @memberof PatientDto
     */
    patientContactDetails?: ContactDetailsDto;
    /**
     * 
     * @type {string}
     * @memberof PatientDto
     */
    primaryRelativeName?: string;
    /**
     * 
     * @type {string}
     * @memberof PatientDto
     */
    primaryRelativeAffiliation?: string;
    /**
     * 
     * @type {ContactDetailsDto}
     * @memberof PatientDto
     */
    primaryRelativeContactDetails?: ContactDetailsDto;
    /**
     * 
     * @type {Array<ContactDetailsDto>}
     * @memberof PatientDto
     */
    additionalRelativeContactDetails?: Array<ContactDetailsDto>;
}

export function PatientDtoFromJSON(json: any): PatientDto {
    return PatientDtoFromJSONTyped(json, false);
}

export function PatientDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatientDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'givenName': !exists(json, 'givenName') ? undefined : json['givenName'],
        'familyName': !exists(json, 'familyName') ? undefined : json['familyName'],
        'cpr': !exists(json, 'cpr') ? undefined : json['cpr'],
        'customUserName': !exists(json, 'customUserName') ? undefined : json['customUserName'],
        'patientContactDetails': !exists(json, 'patientContactDetails') ? undefined : ContactDetailsDtoFromJSON(json['patientContactDetails']),
        'primaryRelativeName': !exists(json, 'primaryRelativeName') ? undefined : json['primaryRelativeName'],
        'primaryRelativeAffiliation': !exists(json, 'primaryRelativeAffiliation') ? undefined : json['primaryRelativeAffiliation'],
        'primaryRelativeContactDetails': !exists(json, 'primaryRelativeContactDetails') ? undefined : ContactDetailsDtoFromJSON(json['primaryRelativeContactDetails']),
        'additionalRelativeContactDetails': !exists(json, 'additionalRelativeContactDetails') ? undefined : ((json['additionalRelativeContactDetails'] as Array<any>).map(ContactDetailsDtoFromJSON)),
    };
}

export function PatientDtoToJSON(value?: PatientDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'givenName': value.givenName,
        'familyName': value.familyName,
        'cpr': value.cpr,
        'customUserName': value.customUserName,
        'patientContactDetails': ContactDetailsDtoToJSON(value.patientContactDetails),
        'primaryRelativeName': value.primaryRelativeName,
        'primaryRelativeAffiliation': value.primaryRelativeAffiliation,
        'primaryRelativeContactDetails': ContactDetailsDtoToJSON(value.primaryRelativeContactDetails),
        'additionalRelativeContactDetails': value.additionalRelativeContactDetails === undefined ? undefined : ((value.additionalRelativeContactDetails as Array<any>).map(ContactDetailsDtoToJSON)),
    };
}

