/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { QuestionnaireFrequencyPairDto } from './QuestionnaireFrequencyPairDto';
import {
    QuestionnaireFrequencyPairDtoFromJSON,
    QuestionnaireFrequencyPairDtoFromJSONTyped,
    QuestionnaireFrequencyPairDtoToJSON,
} from './QuestionnaireFrequencyPairDto';

/**
 * 
 * @export
 * @interface UpdateCareplanRequest
 */
export interface UpdateCareplanRequest {
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateCareplanRequest
     */
    planDefinitionIds?: Array<string>;
    /**
     * 
     * @type {Array<QuestionnaireFrequencyPairDto>}
     * @memberof UpdateCareplanRequest
     */
    questionnaires?: Array<QuestionnaireFrequencyPairDto>;
    /**
     * 
     * @type {string}
     * @memberof UpdateCareplanRequest
     */
    patientPrimaryPhone?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateCareplanRequest
     */
    patientSecondaryPhone?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateCareplanRequest
     */
    primaryRelativeName?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateCareplanRequest
     */
    primaryRelativeAffiliation?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateCareplanRequest
     */
    primaryRelativePrimaryPhone?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateCareplanRequest
     */
    primaryRelativeSecondaryPhone?: string;
}

/**
 * Check if a given object implements the UpdateCareplanRequest interface.
 */
export function instanceOfUpdateCareplanRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateCareplanRequestFromJSON(json: any): UpdateCareplanRequest {
    return UpdateCareplanRequestFromJSONTyped(json, false);
}

export function UpdateCareplanRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCareplanRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'planDefinitionIds': !exists(json, 'planDefinitionIds') ? undefined : json['planDefinitionIds'],
        'questionnaires': !exists(json, 'questionnaires') ? undefined : ((json['questionnaires'] as Array<any>).map(QuestionnaireFrequencyPairDtoFromJSON)),
        'patientPrimaryPhone': !exists(json, 'patientPrimaryPhone') ? undefined : json['patientPrimaryPhone'],
        'patientSecondaryPhone': !exists(json, 'patientSecondaryPhone') ? undefined : json['patientSecondaryPhone'],
        'primaryRelativeName': !exists(json, 'primaryRelativeName') ? undefined : json['primaryRelativeName'],
        'primaryRelativeAffiliation': !exists(json, 'primaryRelativeAffiliation') ? undefined : json['primaryRelativeAffiliation'],
        'primaryRelativePrimaryPhone': !exists(json, 'primaryRelativePrimaryPhone') ? undefined : json['primaryRelativePrimaryPhone'],
        'primaryRelativeSecondaryPhone': !exists(json, 'primaryRelativeSecondaryPhone') ? undefined : json['primaryRelativeSecondaryPhone'],
    };
}

export function UpdateCareplanRequestToJSON(value?: UpdateCareplanRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'planDefinitionIds': value.planDefinitionIds,
        'questionnaires': value.questionnaires === undefined ? undefined : ((value.questionnaires as Array<any>).map(QuestionnaireFrequencyPairDtoToJSON)),
        'patientPrimaryPhone': value.patientPrimaryPhone,
        'patientSecondaryPhone': value.patientSecondaryPhone,
        'primaryRelativeName': value.primaryRelativeName,
        'primaryRelativeAffiliation': value.primaryRelativeAffiliation,
        'primaryRelativePrimaryPhone': value.primaryRelativePrimaryPhone,
        'primaryRelativeSecondaryPhone': value.primaryRelativeSecondaryPhone,
    };
}

