/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    QuestionDto,
    QuestionDtoFromJSON,
    QuestionDtoFromJSONTyped,
    QuestionDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface QuestionnaireDto
 */
export interface QuestionnaireDto {
    /**
     * Id of the resource
     * @type {string}
     * @memberof QuestionnaireDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof QuestionnaireDto
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof QuestionnaireDto
     */
    status?: string;
    /**
     * 
     * @type {Array<QuestionDto>}
     * @memberof QuestionnaireDto
     */
    questions?: Array<QuestionDto>;
    /**
     * 
     * @type {Array<QuestionDto>}
     * @memberof QuestionnaireDto
     */
    callToActions?: Array<QuestionDto>;
    /**
     * 
     * @type {string}
     * @memberof QuestionnaireDto
     */
    version?: string;
    /**
     * 
     * @type {Date}
     * @memberof QuestionnaireDto
     */
    lastUpdated?: Date;
}

export function QuestionnaireDtoFromJSON(json: any): QuestionnaireDto {
    return QuestionnaireDtoFromJSONTyped(json, false);
}

export function QuestionnaireDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuestionnaireDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'questions': !exists(json, 'questions') ? undefined : ((json['questions'] as Array<any>).map(QuestionDtoFromJSON)),
        'callToActions': !exists(json, 'callToActions') ? undefined : ((json['callToActions'] as Array<any>).map(QuestionDtoFromJSON)),
        'version': !exists(json, 'version') ? undefined : json['version'],
        'lastUpdated': !exists(json, 'lastUpdated') ? undefined : (new Date(json['lastUpdated'])),
    };
}

export function QuestionnaireDtoToJSON(value?: QuestionnaireDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'status': value.status,
        'questions': value.questions === undefined ? undefined : ((value.questions as Array<any>).map(QuestionDtoToJSON)),
        'callToActions': value.callToActions === undefined ? undefined : ((value.callToActions as Array<any>).map(QuestionDtoToJSON)),
        'version': value.version,
        'lastUpdated': value.lastUpdated === undefined ? undefined : (value.lastUpdated.toISOString()),
    };
}

