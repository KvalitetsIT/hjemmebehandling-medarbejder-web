/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ThresholdDto
 */
export interface ThresholdDto {
    /**
     * 
     * @type {string}
     * @memberof ThresholdDto
     */
    questionId?: string;
    /**
     * 
     * @type {string}
     * @memberof ThresholdDto
     */
    type?: ThresholdDtoTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof ThresholdDto
     */
    valueBoolean?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ThresholdDto
     */
    valueQuantityLow?: number;
    /**
     * 
     * @type {number}
     * @memberof ThresholdDto
     */
    valueQuantityHigh?: number;
}

/**
* @export
* @enum {string}
*/
export enum ThresholdDtoTypeEnum {
    Normal = 'NORMAL',
    Abnormal = 'ABNORMAL',
    Critical = 'CRITICAL'
}

export function ThresholdDtoFromJSON(json: any): ThresholdDto {
    return ThresholdDtoFromJSONTyped(json, false);
}

export function ThresholdDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThresholdDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'questionId': !exists(json, 'questionId') ? undefined : json['questionId'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'valueBoolean': !exists(json, 'valueBoolean') ? undefined : json['valueBoolean'],
        'valueQuantityLow': !exists(json, 'valueQuantityLow') ? undefined : json['valueQuantityLow'],
        'valueQuantityHigh': !exists(json, 'valueQuantityHigh') ? undefined : json['valueQuantityHigh'],
    };
}

export function ThresholdDtoToJSON(value?: ThresholdDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'questionId': value.questionId,
        'type': value.type,
        'valueBoolean': value.valueBoolean,
        'valueQuantityLow': value.valueQuantityLow,
        'valueQuantityHigh': value.valueQuantityHigh,
    };
}

